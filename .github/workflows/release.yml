name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.PAT }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.4

      - name: Build Application
        run: |
          mkdir -p bin
          # Build for Windows
          GOOS=windows GOARCH=amd64 go build -o bin/tts.exe main.go
          # Build for Linux
          GOOS=linux GOARCH=amd64 go build -o bin/tts main.go

      - name: Archive build output for Windows
        run: |
          mkdir -p artifacts/windows
          mv bin/tts.exe artifacts/windows/
          cd artifacts/windows
          zip -r ../../bin/tts-windows-amd64.zip *

      - name: Archive build output for Linux
        run: |
          mkdir -p artifacts/linux
          mv bin/tts artifacts/linux/
          cd artifacts/linux
          tar -czvf ../../bin/tts-linux-amd64.tar.gz *

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: tts-windows-amd64
          path: bin/tts-windows-amd64.zip

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: tts-linux-amd64
          path: bin/tts-linux-amd64.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.PAT }}
    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: tts-windows-amd64
          path: ./bin

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: tts-linux-amd64
          path: ./bin

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset for Windows
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/tts-windows-amd64.zip
          asset_name: tts-windows-amd64.zip
          asset_content_type: application/zip

      - name: Upload Release Asset for Linux
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/tts-linux-amd64.tar.gz
          asset_name: tts-linux-amd64.tar.gz
          asset_content_type: application/gzip
